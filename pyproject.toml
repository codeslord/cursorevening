[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "selenium-mcp-server"
version = "1.0.0"
description = "Production-ready Model Context Protocol server for Selenium browser automation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Selenium MCP Server Team", email = "team@example.com"},
]
maintainers = [
    {name = "Selenium MCP Server Team", email = "team@example.com"},
]
keywords = ["selenium", "mcp", "browser", "automation", "testing", "web-scraping"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "fastmcp",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
    "typing-extensions>=4.8.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "Pillow>=10.0.0",
]

[project.urls]
Homepage = "https://github.com/example/selenium-mcp-server"
Documentation = "https://selenium-mcp-server.readthedocs.io/"
Repository = "https://github.com/example/selenium-mcp-server.git"
"Bug Tracker" = "https://github.com/example/selenium-mcp-server/issues"
Changelog = "https://github.com/example/selenium-mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
selenium-mcp-server = "selenium_mcp_server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
]
yaml = [
    "PyYAML>=6.0.0",
]
all = [
    "selenium-mcp-server[dev,test,yaml]",
]

# Tool configurations
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["selenium_mcp_server", "config", "examples", "tests"]
skip = ["__init__.py"]

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "webdriver_manager.*",
    "mcp.*",
    "fastmcp.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=selenium_mcp_server",
    "--cov=config",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["selenium_mcp_server", "config"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
    ".env",
    "env",
]
